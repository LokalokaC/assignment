services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    #volumes:
    #  - pgdata:/var/lib/postgresql/data
    #  - ./sql:/sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    restart: always
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    restart: always

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    command: scheduler
    environment:
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW_CONN_POSTGRES_DEFAULT=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - .:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./sql:/opt/airflow/sql
      - ./src:/opt/airflow/src
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always
  
  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    command: webserver
    ports:
      - "8080:8080"
    environment:
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__WEBSERVER__RBAC=True
      - AIRFLOW__WEBSERVER__AUTHENTICATE=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW_CONN_POSTGRES_DEFAULT=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - .:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./sql:/opt/airflow/sql
      - ./src:/opt/airflow/src
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always
  airflow-worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery worker
    environment:
      - PYTHONPATH=/opt/airflow
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW_CONN_POSTGRES_DEFAULT=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    volumes:
      - .:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./sql:/opt/airflow/sql
      - ./src:/opt/airflow/src
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: always

volumes:
#  pgdata:
  pgadmin-data: